{"ast":null,"code":"import _classCallCheck from \"/Users/singhlaaman/modal-demo-2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/singhlaaman/modal-demo-2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/singhlaaman/modal-demo-2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/singhlaaman/modal-demo-2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/singhlaaman/modal-demo-2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/singhlaaman/modal-demo-2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/singhlaaman/modal-demo-2/src/components/Cat.js\";\nimport React, { Component } from 'react';\nimport './Cat.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar Cat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cat, _Component);\n\n  function Cat(props) {\n    var _this;\n\n    _classCallCheck(this, Cat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cat).call(this, props));\n    _this.state = {\n      data: [],\n      currentPage: 1,\n      gifsPerPage: 10,\n      modal: false,\n      imageSrc: 'JIX9t2j0ZTN9S'\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.imageId = _this.imageId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Cat, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"imageId\",\n    value: function imageId(event) {\n      this.setState({\n        imageSrc: console.log(event)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://api.giphy.com/v1/gifs/search?q=cat&api_key=5d70ONYFLMXtwvOMuP6bwJ05CSSzHxYC&limit=30\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          data: result.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          currentPage = _this$state.currentPage,\n          gifsPerPage = _this$state.gifsPerPage,\n          imageSrc = _this$state.imageSrc;\n      var indexOfLastGif = currentPage * gifsPerPage;\n      var indexOfFirstGif = indexOfLastGif - gifsPerPage;\n      var currentGifs = data.slice(indexOfFirstGif, indexOfLastGif);\n      var renderGifs = currentGifs.map(function (data) {\n        return React.createElement(\"img\", {\n          key: data.id,\n          className: \"eachGif\",\n          src: data.images.downsized.url,\n          alt: data.title,\n          onClick: function onClick(event) {\n            _this3.toggle();\n\n            _this3.imageId(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      });\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(data.length / gifsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var renderPageNumbers = pageNumbers.map(function (number) {\n        return React.createElement(\"button\", {\n          className: \"pageNumbers\",\n          key: number,\n          id: number,\n          onClick: _this3.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, number);\n      });\n      return React.createElement(\"div\", {\n        className: \"CatContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pageNumbersDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, renderPageNumbers), React.createElement(\"div\", {\n        className: \"gifsDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, renderGifs, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: imageSrc,\n        alt: \"sh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"OK\")))));\n    }\n  }]);\n\n  return Cat;\n}(Component);\n\nexport default Cat;","map":{"version":3,"sources":["/Users/singhlaaman/modal-demo-2/src/components/Cat.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Cat","props","state","data","currentPage","gifsPerPage","modal","imageSrc","handleClick","bind","toggle","imageId","event","setState","Number","target","id","prevState","console","log","fetch","then","res","json","result","indexOfLastGif","indexOfFirstGif","currentGifs","slice","renderGifs","map","images","downsized","url","title","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Cat.css'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass Cat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      currentPage: 1,\n      gifsPerPage: 10,\n      modal: false,\n      imageSrc: 'JIX9t2j0ZTN9S'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.imageId = this.imageId.bind(this);\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }));\n  }\n\n  imageId(event){\n      this.setState({\n          imageSrc: console.log(event)\n      })\n  }\n\n  componentDidMount() {\n    fetch(\"http://api.giphy.com/v1/gifs/search?q=cat&api_key=5d70ONYFLMXtwvOMuP6bwJ05CSSzHxYC&limit=30\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            data: result.data\n          });\n        }\n      )\n  }\n\n  render() {\n    const { data, currentPage, gifsPerPage, imageSrc } = this.state;\n\n    const indexOfLastGif = currentPage * gifsPerPage;\n    const indexOfFirstGif = indexOfLastGif - gifsPerPage;\n    const currentGifs = data.slice(indexOfFirstGif, indexOfLastGif);\n    \n    const renderGifs = currentGifs.map(data => (\n            <img key={data.id} className=\"eachGif\" src = {data.images.downsized.url} alt={data.title} onClick={(event) => { this.toggle(); this.imageId(event);}}/>\n      ));\n\n      const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(data.length / gifsPerPage); i++) {\n          pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n          return (\n            <button\n              className = \"pageNumbers\"\n              key={number}\n              id={number}\n              onClick={this.handleClick}\n            >\n              {number}\n            </button>\n          );\n        });\n      return (\n        <div className=\"CatContainer\">\n            <div className=\"pageNumbersDiv\">\n                {renderPageNumbers}\n            </div>\n            <div className = \"gifsDiv\">\n                {renderGifs}\n                {}\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}><img src={imageSrc} alt=\"sh\"/></ModalHeader>\n                    <ModalBody>\n            \n                    </ModalBody>\n                    <ModalFooter>\n                    <Button color=\"secondary\" onClick={this.toggle}>OK</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        </div>\n      );\n  }\n}\n\nexport default Cat;\n"]},"metadata":{},"sourceType":"module"}